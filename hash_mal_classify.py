import os,sys
import pefile
import hashlib
import ssdeep
#This program will generate imphash snd fuzzyhash signature database for files in folder provided as argument
#Once signature database is generated, classifier can scan unknown sample set to identify if it matches signatures
#thereby to cluster or classify similar samples
#-----------Written by Rakesh Sharma (techie.rakesh@gmail.com-------------


#this code block will build signature file 'sig.db' after computing imphash and fuzzyhash
def build_signature():

	fp = open('sig.db','w')
	for root, dirs, files in os.walk(sys.argv[2]):
		for file in files:
			filename = os.path.join(root, file)
			try:
			   pe = pefile.PE(filename)
			except:
			   print "Not a PE file"
			target = open(filename,"rb")
			md5 = hashlib.md5(target.read())
			hash = md5.hexdigest()
			imphash = pe.get_imphash()
			fuzzy = ssdeep.hash_from_file(filename)
			sig = (hash + "," + imphash + "," + fuzzy) + "\n"
			print sig
			fp.write(sig)

	fp.close()


#this code block will scan files , generate hashes and compare them with signature database
def scan_and_match():
	fp1 = open('sig.db','r').readlines()
	for root, dirs, files in os.walk(sys.argv[2]):
		for file in files:
			filename = os.path.join(root, file)
			try:
			   pe = pefile.PE(filename)
			except:
			   print "Not a PE file"
			imphash = pe.get_imphash()
			fuzzy = ssdeep.hash_from_file(filename)
			global flag
			flag = 0
			for line in fp1:
				line = line.rstrip()
				linex = line.split(',')
				if imphash == linex[1]:
					print "Match: IMP hash for file " + str(filename) + " matched with file having MD5 = " + linex[0]
					flag = 1

			if flag == 0:
				for line in fp1:
					line = line.rstrip()
					linex = line.split(',')
					compare = ssdeep.compare(fuzzy, linex[2])
					if (compare > 90):
						print "Fuzzy hash for file " + str(filename) + " matched with file having MD5 = " + linex[0] + " Similarity " + str(compare)
#banner section
def welcome():
		if(len(sys.argv) < 3):
			print "\n####################################################"
			print " Malware classifier using Imphash and FuzzyHash"
			print " Written by Rakesh Sharma (techie.rakesh@gmail.com)"
			print "####################################################"
			print " \nUsage: program.py <command> <directory>"
			print "\nCommands: 'build' - build imphash signatures"
			print "      	  'match' - compare files with signature"
			sys.exit(1)
#init section
def main():

	welcome()
	if sys.argv[1] == "build":
		build_signature()
	if sys.argv[1] == "match" :
		scan_and_match()
	else:
		welcome()


if __name__ == "__main__":
	    main()
